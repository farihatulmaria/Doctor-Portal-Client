{"ast":null,"code":"var _jsxFileName = \"/var/www/html/farihatulmaria/farihatulmaria/programming-hero/Module-notes/Module-71/doctor-portal/src/Pages/Dashboard/UserRow.jsx\";\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserRow = _ref => {\n  let {\n    user,\n    refetch,\n    index\n  } = _ref;\n  const {\n    role,\n    email\n  } = user;\n\n  const makeAdmin = () => {\n    const url = `http://localhost:5000/users/admin/${email}`;\n    fetch(url, {\n      method: 'PUT',\n      headers: {\n        'authorization': `user ${localStorage.getItem('accessToken')}`\n      }\n    }).then(res => {\n      if (res.status === 403) {\n        toast.error('Failed to Make an admin');\n      }\n\n      return res.json();\n    }).then(data => {\n      if (data.modifiedCount > 0) {\n        refetch();\n        toast.success(`Successfully made an admin`);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: role !== 'admin' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: makeAdmin,\n        className: \"rounded-xl btn-xs\",\n        children: \"Make Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 40\n      }, this) : 'This person is an admin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rounded-xl btn-xs btn-error\",\n        children: \"Remove User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_c = UserRow;\nexport default UserRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserRow\");","map":{"version":3,"names":["React","toast","UserRow","user","refetch","index","role","email","makeAdmin","url","fetch","method","headers","localStorage","getItem","then","res","status","error","json","data","modifiedCount","success"],"sources":["/var/www/html/farihatulmaria/farihatulmaria/programming-hero/Module-notes/Module-71/doctor-portal/src/Pages/Dashboard/UserRow.jsx"],"sourcesContent":["import React from 'react';\nimport { toast } from 'react-toastify';\nconst UserRow = ({user,refetch,index}) => {\n    const {role,email} = user;\n    const makeAdmin = () =>{\n        const url =`http://localhost:5000/users/admin/${email}`;\n        fetch(url,{\n            method:'PUT',\n            headers:{\n                'authorization':`user ${localStorage.getItem('accessToken')}`\n            },\n        })\n        .then(res => {\n            if(res.status === 403){\n                toast.error('Failed to Make an admin');\n            }\n            return res.json()})\n        .then(data => {\n            if (data.modifiedCount > 0) {\n                refetch();\n                toast.success(`Successfully made an admin`);\n            }\n\n        })\n    }\n    return (\n        <tr>\n            <th>{index + 1}</th>\n            <td>{email}</td>\n            <td>\n                {\n                    role !== 'admin' ? <button onClick={makeAdmin} className=\"rounded-xl btn-xs\">Make Admin</button> : 'This person is an admin' \n                }\n            </td>\n            <td>\n                <button className=\"rounded-xl btn-xs btn-error\">Remove User</button>\n            </td>\n        </tr>\n    );\n};\n\nexport default UserRow;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AACA,MAAMC,OAAO,GAAG,QAA0B;EAAA,IAAzB;IAACC,IAAD;IAAMC,OAAN;IAAcC;EAAd,CAAyB;EACtC,MAAM;IAACC,IAAD;IAAMC;EAAN,IAAeJ,IAArB;;EACA,MAAMK,SAAS,GAAG,MAAK;IACnB,MAAMC,GAAG,GAAG,qCAAoCF,KAAM,EAAtD;IACAG,KAAK,CAACD,GAAD,EAAK;MACNE,MAAM,EAAC,KADD;MAENC,OAAO,EAAC;QACJ,iBAAiB,QAAOC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;MADxD;IAFF,CAAL,CAAL,CAMCC,IAND,CAMMC,GAAG,IAAI;MACT,IAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;QAClBhB,KAAK,CAACiB,KAAN,CAAY,yBAAZ;MACH;;MACD,OAAOF,GAAG,CAACG,IAAJ,EAAP;IAAkB,CAVtB,EAWCJ,IAXD,CAWMK,IAAI,IAAI;MACV,IAAIA,IAAI,CAACC,aAAL,GAAqB,CAAzB,EAA4B;QACxBjB,OAAO;QACPH,KAAK,CAACqB,OAAN,CAAe,4BAAf;MACH;IAEJ,CAjBD;EAkBH,CApBD;;EAqBA,oBACI;IAAA,wBACI;MAAA,UAAKjB,KAAK,GAAG;IAAb;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAKE;IAAL;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UAEQD,IAAI,KAAK,OAAT,gBAAmB;QAAQ,OAAO,EAAEE,SAAjB;QAA4B,SAAS,EAAC,mBAAtC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAnB,GAAmG;IAF3G;MAAA;MAAA;MAAA;IAAA,QAHJ,eAQI;MAAA,uBACI;QAAQ,SAAS,EAAC,6BAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CArCD;;KAAMN,O;AAuCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}