{"ast":null,"code":"var _jsxFileName = \"/var/www/html/farihatulmaria/farihatulmaria/programming-hero/Module-notes/Module-71/doctor-portal/src/Pages/Dashboard/CheckoutForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutForm = _ref => {\n  _s();\n\n  let {\n    appointment\n  } = _ref;\n  const stripe = useStripe();\n  const elements = useElements();\n  const [cardError, setCardError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [processing, setProcessing] = useState(false);\n  const [transactionId, setTransactionId] = useState('');\n  const [clientSecret, setClientSecret] = useState('');\n  const {\n    _id,\n    price,\n    patient,\n    email\n  } = appointment;\n  useEffect(() => {\n    fetch('http://localhost:5000/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `user ${localStorage.getItem('accessToken')}`\n      },\n      body: JSON.stringify({\n        price\n      })\n    }).then(res => res.json()).then(data => {\n      if (data !== null && data !== void 0 && data.clientSecret) {\n        setClientSecret(data.clientSecret);\n      }\n    });\n  }, [price]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const card = elements.getElement(CardElement);\n\n    if (card == null) {\n      return;\n    }\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card\n    });\n    setCardError((error === null || error === void 0 ? void 0 : error.message) || '');\n    setSuccess('');\n    setProcessing(true);\n    const {\n      paymentIntent,\n      error: intentError\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: card,\n        billing_details: {\n          name: patient,\n          email: email\n        }\n      }\n    });\n\n    if (intentError) {\n      setCardError(intentError === null || intentError === void 0 ? void 0 : intentError.message);\n      setProcessing(false);\n    } else {\n      setCardError('');\n      toast('Congrats! Your payment is completed.'); // setSuccess('Congrats! Your payment is completed.')\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {\n      options: {\n        style: {\n          base: {\n            fontSize: '16px',\n            color: '#424770',\n            '::placeholder': {\n              color: '#aab7c4'\n            }\n          },\n          invalid: {\n            color: '#9e2146'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-error mt-1\",\n      children: cardError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"my-2 btn-sm mt-4\",\n      type: \"submit\",\n      disabled: !stripe || !clientSecret,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"sEWy0bMvR9fYwprMlZm+0C0P6+U=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n/* disabled={!stripe || !clientSecret || success} */\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["CardElement","useElements","useStripe","React","useEffect","useState","CheckoutForm","appointment","stripe","elements","cardError","setCardError","success","setSuccess","processing","setProcessing","transactionId","setTransactionId","clientSecret","setClientSecret","_id","price","patient","email","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","res","json","data","handleSubmit","e","preventDefault","card","getElement","error","paymentMethod","createPaymentMethod","type","message","paymentIntent","intentError","confirmCardPayment","payment_method","billing_details","name","toast","style","base","fontSize","color","invalid"],"sources":["/var/www/html/farihatulmaria/farihatulmaria/programming-hero/Module-notes/Module-71/doctor-portal/src/Pages/Dashboard/CheckoutForm.jsx"],"sourcesContent":["import { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useEffect, useState } from 'react';\n\nconst CheckoutForm = ({appointment}) => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const [cardError, setCardError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [processing, setProcessing] = useState(false);\n    const [transactionId, setTransactionId] = useState('');\n    const [clientSecret, setClientSecret] = useState('');\n\n\n    const {_id,price,patient,email} = appointment;\n\n    useEffect(() => {\n      fetch('http://localhost:5000/create-payment-intent', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `user ${localStorage.getItem('accessToken')}`\n            },\n            body: JSON.stringify({ price })\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data?.clientSecret) {\n                    setClientSecret(data.clientSecret);\n                }\n            });\n\n    }, [price])\n    \n\n\n\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        if(!stripe || !elements){\n            return\n        }\n        const card = elements.getElement(CardElement);\n        if(card == null){\n            return\n        }\n        const {error,paymentMethod} = await stripe.createPaymentMethod({\n            type:'card',\n            card\n        })\n        setCardError(error?.message || '');\n        setSuccess('');\n        setProcessing(true);\n        const { paymentIntent, error: intentError } = await stripe.confirmCardPayment(\n            clientSecret,\n            {\n                payment_method: {\n                    card: card,\n                    billing_details: {\n                        name: patient,\n                        email: email\n                    },\n                },\n            },\n        );\n\n        if (intentError) {\n            setCardError(intentError?.message);\n            setProcessing(false);\n        }else{\n            setCardError('');\n            toast('Congrats! Your payment is completed.')\n            // setSuccess('Congrats! Your payment is completed.')\n        }\n    }\n    return (\n    <form onSubmit={handleSubmit}>\n        <CardElement\n            options={{\n                style: {\n                    base: {\n                        fontSize: '16px',\n                        color: '#424770',\n                        '::placeholder': {\n                            color: '#aab7c4',\n                        },\n                    },\n                    invalid: {\n                        color: '#9e2146',\n                    },\n                },\n            }}\n        />\n        <p className='text-error mt-1'>{cardError}</p>\n        <button className='my-2 btn-sm mt-4' type=\"submit\" disabled={!stripe || !clientSecret}>\n            Pay\n        </button>\n    </form>\n    );\n};\n\nexport default CheckoutForm;\n/* disabled={!stripe || !clientSecret || success} */"],"mappings":"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"},"metadata":{},"sourceType":"module"}